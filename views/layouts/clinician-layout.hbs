<html lang='en'>
<head>
  <meta charset='UTF-8' />
  <meta http-equiv='X-UA-Compatible' content='IE=edge' />
  <meta name='viewport' content='width=device-width, initial-scale=1.0' />
  <title>Diabetes Home</title>
  <link rel='stylesheet' href='/css/styles.css' />
  <link rel='stylesheet' href='/css/clinician.css' />
  <link rel='stylesheet' href='/css/popup.css' />
  <link rel='stylesheet' href='/css/chart.css' />
  <link rel='stylesheet' href='/css/notes-messages.css' />
  <link rel='preconnect' href='https://fonts.gstatic.com' />
  <link href='https://fonts.googleapis.com/css2?family=Lexend+Mega&family=Rammetto+One&display=swap' rel='stylesheet' />
  <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css' />
  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  <script src='https://cdn.anychart.com/releases/8.0.0/js/anychart-base.min.js'></script>
  <script src='https://code.jquery.com/jquery-3.6.0.min.js'></script>
  <script src='https://unpkg.com/axios/dist/axios.min.js'></script>

  <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
  <script src='https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.2/jquery-ui.min.js'></script>
  <script src='https://cdn.anychart.com/releases/8.0.0/js/anychart-base.min.js'></script>
  <link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.10.16/css/jquery.dataTables.css">
  <script type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.10.16/js/jquery.dataTables.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js"></script>
</head>

<body>
  {{! HEADER }}
  <header class='header'>
    <nav class='cli-navbar'>
      <a href='/'>
        <img src='/images/logo.png' />
      </a>
      <div class='navitems'>
        <button onclick='open_dashboard()'><b>Dashboard</b></button>
        <button onclick='open_settings()'><b>Settings</b></button>
        <form class="logout" action="/logout" method="post">
          <button type="submit">Log Out</button>
        </form>
      </div>
    </nav>
  </header>
  {{! END OF HEADER }}

  {{! PAGE'S CONTENT }}
  <main>
    {{{body}}}
  </main>
  {{! END OF PAGE'S CONTENT }}

  {{! FOOTER }}
  <footer class='footer'>
    <div class='footer-upper'>
      <div class='footer-logo'>
        <img src='/images/logo.png' />
        <p>Diabetes@Home</p>
      </div>
      <div class='footer-items'>
        <a href='/about-this-website'>About Diabetes@Home</a>
        <a href='/about-diabetes'>About Diabetes</a>
        <a href='contact'>Contact us</a>
        <a href='press-kit'>Press kit</a>
      </div>
      <p class='footer-copyright'>©Diabetes@Home 2022</p>
    </footer>
    {{! END OF FOOTER }}
     <script id="note-message-template" type="template/handlebars">
      \{{#each item}}
        <div style = "\{{this.style}}">
        \{{this.content}}
        <i class="fa fa-trash fa-2x" aria-hidden="true" style = 'color: black;' id = "bin" onClick = "deleteNoteOrMessage(`{{this._id}}`, {{this.type}})"></i>
        </div>
      \{{/each}}
  </script>
    <script>
      function open_settings() {} 
      function open_dashboard() {}

  <script>
    function open_settings() {
      window.location.href = '/clinician/setting';
    }
    function open_dashboard() {
      window.location.href = '/clinician';
    }

    function check_confirm_password(input) {
      if (input.value != document.getElementById('password').value) {
        input.setCustomValidity('Password must be matching.');
      } else {
        // input is valid -- reset the error message
        input.setCustomValidity('');
      }
    }

    function at_least_one_checkbox(input) {
      let checkboxes = document.querySelectorAll('input[type=checkbox]:checked');
      if (checkboxes.length == 0) {
        input.setCustomValidity('At least one measurement must be selected.');
      } else {
        // input is valid -- reset the error message
        input.setCustomValidity('');
      }

      // Hide unneccessary field
      if (input.id == 'bloodGlucoseCheckbox') {
        if (input.checked) {
          document.getElementById('bloodGlucloseThreshField').style.display = 'flex';
        } else {
          document.getElementById('bloodGlucloseThreshField').style.display = 'none';
        }
      }
      if (input.id == 'weightCheckbox') {
        if (input.checked) {
          document.getElementById('weightThreshField').style.display = 'flex';
        } else {
          document.getElementById('weightThreshField').style.display = 'none';
        }
      }
      if (input.id == 'insulinDoseCheckbox') {
        if (input.checked) {
          document.getElementById('insulinDoseThreshField').style.display = 'flex';
        } else {
          document.getElementById('insulinDoseThreshField').style.display = 'none';
        }
      }
      if (input.id == 'stepCountCheckbox') {
        if (input.checked) {
          document.getElementById('stepCountThreshField').style.display = 'flex';
        } else {
          document.getElementById('stepCountThreshField').style.display = 'none';
        }
      }
    }
    //This function is used to delete notes or messages
    function deleteNoteOrMessage(itemId, typeId) {
      const url = window.location.href;
      const patId = url.split("/").slice(-1)[0];
      if (typeId == 1) {
        axios.post(`/clinician/delete-note/${patId}`, { noteId: itemId }).then(function (response) {
          window.location = `/clinician/note/${patId}`
        }).catch(function (error) {
          console.log(error)
        });
      }
      else {
        axios.post(`/clinician/delete-message/${patId}`, { messageId: itemId }).then(function (response) {
          window.location = `/clinician/message/${patId}`
        }).catch(function (error) {
          console.log(error)
        });
      }
      return;
    }
    //This function is used to pop up notes and messages
    function openPopUp() {
      $("#popup").addClass('active');
      $("#overlay").addClass('active');
      $("#cancel-button").on('click', function () {
        $("#popup").removeClass('active');
        $("#overlay").removeClass('active');
      });
      return;
    }
    //This function is used to edit text style
    function editStyle() {
      const target = "font-family";
      let selectBox = document.getElementById("text-style");
      let selectedValue = selectBox.options[selectBox.selectedIndex].value;
      $("#text-note-message").css(target, selectedValue);
      $(`#${target}`).val(selectedValue);
    }
    //This function is used to edit text size
    function editSize() {
      const target = "font-size";
      let selectBox = document.getElementById("text-size");
      let selectedValue = selectBox.options[selectBox.selectedIndex].value + "px";
      $("#text-note-message").css(target, selectedValue);
      $(`#${target}`).val(selectedValue);
    }
    //This function is used to make text bold
    function bold() {
      const target = "font-weight";
      if (($("#text-note-message").css(target)) == 700) {
        $("#text-note-message").css(target, 400);
        $(`#${target}`).val("400");
      }
      else {
        $("#text-note-message").css(target, 700);
        $(`#${target}`).val("700")
      }
      return;
    }
    //This function is used to make text italic
    function italic() {
      const target = "font-style";
      if ($("#text-note-message").css("font-style") == "italic") {
        $("#text-note-message").css("font-style", "normal");
        $(`#${target}`).val("normal");
      }
      else {
        $("#text-note-message").css("font-style", "italic");
        $(`#${target}`).val("italic");
      }
      return;
    }
    //This function is used to align text.
    function alignText(option) {
      const target = "text-align";
      let initialAlignment = $("#text-note-message").css(target);
      if ($("#text-note-message").css(target) != option) {
        $("#text-note-message").css(target, option);
        $(`#${target}`).val(option)
      }
      else {
        $("#text-note-message").css("text-align", initialAlignment);
        $(`#${target}`).val(initialAlignment);
      }
      return;
    }
    function emoji(option) {
      emo = "";
      if (option === "smile") {
        emo = "😀";
      } else if (option === "love") {
        emo = "❤️";
      } else if (option === "celebrate") {
        emo = "🎉";
      } else if (option === "pill") {
        emo = "💊";
      } else if (option === "vax") {
        emo = "💉";
      }
      $("#text-note-message").val(function (i, val) {
        return val + emo;
      });
      return;
    }

      
    $(function () {
      $('#note-message-search').keyup(function () {
        var keyword = $(this).val();
        if (keyword != undefined) {
          {{!-- console.log(keyword); --}}
          keyword = keyword.trim().toLowerCase();
        }
        getFilteredItems(keyword);
      });
    });

      function filterItems(items, keyword) {
        if (items.length == 0) {
          return items;
        }
        var filteredItems = items.filter(function(item) {
          return item.content.toLowerCase().indexOf(keyword) > -1;
        });
        return filteredItems;
      }

      var noteMessageData = document.getElementById("note-message-data").value;
      noteMessageData = noteMessageData.substring(1, noteMessageData.length - 1).split(/(?<=})\s*,\s*(?={)/);
      noteMessageData = noteMessageData.length > 0 ? noteMessageData.map(JSON.parse) : noteMessageData;
      
      function getFilteredItems(keyword) {
        filteredItems = filterItems(noteMessageData, keyword);

        var $itemsContainer = $('.note-message-data');
        $itemsContainer.empty();
        var items = [];
        var item = {};
        var data = {};
        var source = $('#note-message-template').html();
        var template = Handlebars.compile(source);
        items = filteredItems.map(function(element) {
          return item = {
            _id: element._id,
            style: element.style,
            content: element.content,
            type: element.type,
          }
        });         
      
        data = {item: items};
        $itemsContainer.append(template(data));
        {{!-- console.log(source); --}}
        {{!-- console.log(data); --}}
      }
    </script>

</html>